name: Docker CI/CD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      
    # Use docker/compose GitHub action which is more reliable
    - name: Set up Docker Compose
      run: |
        # Check if Docker Compose V2 is available
        docker compose version || echo "Using Docker Compose V1 fallback"
        
    - name: Build and start containers (V2 syntax)
      continue-on-error: true
      id: compose_v2
      run: |
        docker compose build
        docker compose up -d
        echo "Used Docker Compose V2"
        
    - name: Build and start containers (V1 fallback)
      if: steps.compose_v2.outcome == 'failure'
      run: |
        docker-compose build
        docker-compose up -d
        echo "Used Docker Compose V1"
      
    - name: Wait for services to initialize
      run: sleep 30
      
    - name: Check container status
      run: |
        docker compose ps || docker-compose ps
      
    # For trainer, handle both V1 and V2 possibilities
    - name: Run ML training
      run: |
        # Attempt V2 syntax first
        docker compose up trainer --no-deps || docker-compose up trainer --no-deps
        # Check trainer exit code
        (docker compose ps -q trainer > /dev/null) || (docker-compose ps -q trainer > /dev/null) || echo "Trainer completed"
        
    - name: Run evaluations
      run: |
        # Try V2 syntax with fallback to V1
        docker compose exec -T evaluator python evaluate.py || docker-compose exec -T evaluator python evaluate.py || true
        
    - name: Run explanation generation
      run: |
        # Try V2 syntax with fallback to V1
        docker compose exec -T explainer python explain.py || docker-compose exec -T explainer python explain.py || true
      
    - name: Logs from containers
      if: always()  # Run even if previous steps failed
      run: |
        echo "=== TRAINER LOGS ==="
        docker compose logs trainer || docker-compose logs trainer
        echo "=== EVALUATOR LOGS ==="
        docker compose logs evaluator || docker-compose logs evaluator
        echo "=== EXPLAINER LOGS ==="
        docker compose logs explainer || docker-compose logs explainer
        echo "=== DASHBOARD LOGS ==="
        docker compose logs dashboard || docker-compose logs dashboard
      
    - name: Stop containers
      if: always()  # Run even if previous steps failed
      run: |
        docker compose down || docker-compose down
